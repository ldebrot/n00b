} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability <- function(n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) print("You need to specify n trials, k successes and p probability")
else choose(n,k)*p^k*(1-p)^(n-k)
}
binom_probability <- function(n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) {
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability <- function(n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) {
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability <- function(n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) {
print("You need to specify n trials, k successes and p probability")
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
print("You need to specify n trials, k successes and p probability")
}
}
binom_probability <- function (n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) {
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability <- function (n=0,k=0,p=0) {
if (sum(c(n,k,p))=0) {
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability <- function (n=0,k=0,p=0) {
if (sum(c(n,k,p))==0) {
print("You need to specify n trials, k successes and p probability")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_probability()
binom_probability(8,3,.35)
binom_probability(8,3,35)
binom_probability(8,3,0)
binom_probability(8,3,1)
binom_probability(8,0,.35)
binom_probability(0,0,.35)
binom_mean <- function (n=0,p=0) {
if (sum(c(n,p))==0) {
print("You need to specify n trials and p probability")
} else {
print(n*p)
}
}
binom_mean
binom_mean()
binom_mean(3,.35)
binom_mean <- function (n=0,p=0) {
if (sum(c(n,p))==0) {
print("You need to specify n trials and p probability")
} else {
print(c("Mean = n * p*",n*p))
}
}
binom_mean(3,.35)
binom_mean <- function (n=0,p=0) {
if (sum(c(n,p))==0) {
print("You need to specify n trials and p probability.")
print("FORMULA : Mean = n * p*")
} else {
print(n*p)
}
}
binom_mean()
binom_probability <- function (n=0,k=0,p=0) {
if (sum(c(n,k,p))==0) {
print("You need to specify n trials, k successes and p probability")
print("FORMULA : choose(n,k)*p^k*(1-p)^(n-k)")
} else {
choose(n,k)*p^k*(1-p)^(n-k)
}
}
binom_mean <- function (n=0,p=0) {
if (sum(c(n,p))==0) {
print("You need to specify n trials and p probability.")
print("FORMULA : sigma = sqrt(n*p*(1-p))")
} else {
print(sqrt(n*p*(1-p)))
}
}
binom_sd
source('~/.active-rstudio-document', echo=TRUE)
binom_sd(3,2)
binom_sd(3,1)
binom_sd(3,.65)
source('~/.active-rstudio-document', echo=TRUE)
binom_check
binom_check()
40*.35
binom_sd(40,.35)
binom_mean(40,.35)
binom_check
binom_check()
binom_probability(4,0,.3)
binom_probability(4,1,.3)
binom_probability(4,2,.3)
binom_probability(4,3,.3)
binom_probability(4,4,.3)
1-.2401-.4116
binom_mean(7,.3)
binom_probability(7,0,.3)+binom_probability(7,1,.3)+binom_probability(7,2,.3)
nbinom
source('~/.active-rstudio-document', echo=TRUE)
binom_mean(n=35,p=.8)
4/.8
choose(6,4)
choose(5,4)
choose(5,3)
.2^2*.8^4
nbinom_probability(6,4,.8)
nbinom_probability()
nbinom_probability <- function (n=0,k=0,p=0) {
if (sum(c(n,k,p))==0) {
print("You need to specify k successes at the nth trial, at p probability")
print("FORMULA : choose(n-1,k-1)*p^k*(1-p)^(n-k)")
} else {
print(choose(n-1,k-1)*p^k*(1-p)^(n-k))
}
}
nbinom_probability()
nbinom_probability(k=4,n=5,p=.8)
nbinom_probability(k=4,n=4,p=.8)+nbinom_probability(k=4,n=5,p=.8)
binom_probability(k=3,n=7,p=.7)
nbinom_probability(k=2,n=4,p=.7)
nbinom_probability(k=1,n=5,p=.7)
qnorm(p=.95,mean=1100,sd=75)
qnorm(p.95,mean=1100,sd=7.5)
qnorm(p=.95,mean=1100,sd=7.5)
binom_probability(n=5,k=5,p=.5)+binom_probability(n=5,k=4,p=.5)
source('~/.active-rstudio-document', echo=TRUE)
pois_probability()
pois_probability(lambda=5/3,k=10)
pois_check()
pois_probability()
?ppois()
ppois(q=10,lambda=5*3)
pois_probability(lambda=533,k=10)
pois_probability(lambda=5*3,k=10)
pois_probability(lambda=5/3,k=10)
ppois(q=10,lambda=5/3)
1-ppois(q=10,lambda=5/3)
ppois(q=10,lambda=5*3)
pois_probability(lambda=15,k=10)
ppois
c_ppois
pois_probability()
source('~/.active-rstudio-document', echo=TRUE)
ppois(q=10,lambda=5*3)
pois_probability(lambda=15,k=10)
exp(1)
((15^10)*exp(1)^(-15))/factorial(10)
factorial(10)
sum(pois_probability(lambda=15,k=1:10))
source('~/.active-rstudio-document', echo=TRUE)
pois_probability()
install.packages("usingr")
install.packages("UsingR")
.05*.07
.95*.88
.836/(.836+.0035)
round(.836/(.836+.0035)*100,2)
?t.test
data(sleep)
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
## Calculating directly
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
## using R's built in function
t.test(difference)
## using R's built in function, another format
t.test(g2, g1, paired = TRUE)
## using R's built in function, another format
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
## Below are the results (after a little formatting)
[,1] [,2]
[1,] 0.7001 2.46
[2,] 0.7001 2.46
[3,] 0.7001 2.46
[4,] 0.7001 2.46
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
## Calculating directly
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
## using R's built in function
t.test(difference)
## using R's built in function, another format
t.test(g2, g1, paired = TRUE)
## using R's built in function, another format
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
g1
g2
library(datasets); data(ChickWeight); library(reshape2)
##define weight gain or loss
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1 : 2)] <- paste("time", names(wideCW)[-(1 : 2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW,
gain = time21 - time0
)
library(datasets); data(ChickWeight); library(reshape2)
##define weight gain or loss
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1 : 2)] <- paste("time", names(wideCW)[-(1 : 2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW,
gain = time21 - time0
)
qplot(ChickWeight)
library(ggplot2)
qplot(ChickWeight)
?dcast
head(wideCW)
head(ChickWeight)
head(ChickWeight[which(ChickWeight$Chick=="18",])
head(ChickWeight[which(ChickWeight$Chick=="18",)]
)
head(ChickWeight[which(ChickWeight$Chick=="18",)])
head(ChickWeight[which(ChickWeight$Chick="18",)])
head(ChickWeight[which(ChickWeight$Chick==18,)])
head(ChickWeight[which(ChickWeight$Chick==18,)])
ChickWeight[which(ChickWeight$Chick==18,)]
ChickWeight[which(ChickWeight$Chick!=18,)]
ChickWeight[which(ChickWeight$Chick==18),]
head(wideCW)
load(mtcars)
data(mtcars)
(strmtcars$mpg)
str(mtcars$mpg)
unique(mtcars$mpg)
summary(mtcars$mpg  )
hist(mtcars$mpg)
hist(mtcars$mpg,bin=20)
hist(mtcars$mpg,bin.width=20)
hist(mtcars$mpg,binwidth=20)
hist(mtcars$mpg,bins=20)
?hist
hist(mtcars$mpg,breaks=20)
hist(mtcars$mpg,breaks=100)
hist(mtcars$mpg,breaks=10)
length(mtcars$mpg)
t.test(x=mtcars$mpg)
?t.test
t.test(x=mtcars$mpg)$conf
round(t.test(x=mtcars$mpg)$conf)
round(1203.1801023971073)
smoke=matrix(c(400,416,188,1380,1823,1168), ncol=2, dimnames=list(parent=c("both", "one","neither"), child=c("yes", "no")))
smoke
#### Chi-Square Independence Test
result=chisq.test(smoke)
result
#### Let us look at the Percentage, Row Percentage and Column Percentage
#### of the total observations contained in each cell.
Contingency_Table=list(Frequency=smoke,Expected=result$expected,Percentage=prop.table(smoke),RowPercentage=prop.table(smoke,1),ColPercentage=prop.table(smoke,2))
Contingency_Table
prop.table(smoke)
prop.table(smoke,1)
prop.table(smoke,2)
data(sleep)
head(sleep)
str(sleep)
```{r, echo = FALSE, fig.width=6, fig.height=6, fig.align='center'}
library(ggplot2)
g <- ggplot(sleep, aes(x = group, y = extra, group = factor(ID)))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = .5)
g
```{r, echo = FALSE, fig.width=6, fig.height=6, fig.align='center'}
library(ggplot2)
g <- ggplot(sleep, aes(x = group, y = extra))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = .5)
g
```{r, echo = FALSE, fig.width=6, fig.height=6, fig.align='center'}
library(ggplot2)
g <- ggplot(sleep, aes(x = group, y = extra, group = factor(ID)))
g <- g + geom_line(size = 1, aes(colour = ID)) + geom_point(size =10, pch = 21, fill = "salmon", alpha = .5)
g
sleep$extra
sleep
head(sleep)
sleep[1:11]
sleep[1:11,]
mn
sd
s
difference
n
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
?qt
?qtest
?q.test
?t.test
attach(mtcars)
t.test(x=mpg[which(mpg %in% c(4,6))],var.equal = TRUE,conf.level = .95)
mpg[which(mpg %in% c(4,6))]
mpg[which(mpg %in% c(4,6),)]
mpg[which(mpg %in% c(4,6)),]
mpg
mtcars$mpg
mpg
detach(mtcars)
mpg
mtcars$mpg[which(mtcars$mpg %in% c(4,6)),]
mtcars$mpg[which(mtcars$mpg %in% c(4,6))]
mtcars$mpg
mtcars$cyl
mtcars$mpg[which(mtcars$cyl %in% c(4,6))]
t.test(x=mtcars$mpg[which(mtcars$cyl %in% c(4,6))],var.equal = TRUE,conf.level = .95)
new <- mtcars[which(mtcars$cyl %in% c(4,6))]
new <- mtcars[which(mtcars$cyl %in% c(4,6)),]
new
cyl4 <- mtcars[which(mtcars$cyl==4)),]
cyl4 <- mtcars[which(mtcars$cyl==4),]
cyl6 <- mtcars[which(mtcars$cyl==6),]
t.test(cyl4,cyl6,paired=FALSE,var.equal = TRUE)
t.test(cyl4,cyl6,paired=FALSE,var.equal = TRUE,conf.level = .95)
t.test(cyl4$mpg,cyl6$mpg,paired=FALSE,var.equal = TRUE,conf.level = .95)
qt(.975,8)
((8*1.5^2)+(8*1.5^2))/(16)
((8*1.5^2)+(8*1.8^2))/(16)
library(UsingR)
data(father.son)
t.test(father.son$sheight - father.son$fheight)
library(datasets)
data("ChickWeight")
library(reshape2)
wideCW <- dcast(ChickWeight,Diet+Chick~Time,value.var = "weight")
names(wideCW)
names(wideCW)[-(1:2)] <-
names(wideCW)[-(1:2)]
names(wideCW)[-(1:2)] <- paste("time",names(wideCW)[-(1:2)],sep="")
library(dplyr)
names(wideCW)[-(1:2)]
wideCW <- mutate(wideCW,gain=time21-time0)
wideCW
head(wideCW)
wideCW14<-subset(wideCW,Diet %in% c(1,4))
t.test(gain~Diet,paired=FALSE,var.equal=TRUE,data=wideCW14)
t.test(wideCW14$gain,wideCW14$Diet,paired=FALSE,var.equal=TRUE)
t.test(wideCW14$gain,wideCW14$Diet,paired=FALSE,var.equal=TRUE,data=wideCW14)
?t.test
qt(-2.275,23)
qt(-2.725,23)
qt(-1,23)
qt(0,23)
qt(1,23)
?qt
qt(-2.725,df=23)
qnorm(-2.725)
qnorm(3)
qnorm(1)
qnorm(0.5)
qnorm(1,sd=1,mean=0)
?qnorm
qnorm(.2)
qnorm(.4)
qnorm(.5)
qnorm(.6)
qnorm(1.6)
8'2'
8^8
.5^8
.5^7
choose(1,8)*.5^8
choose(8,1)*.5^8
choose(8,2)*.5^8
choose(2,8)*.5^8
choose(8,2)*.5^8
choose(8,1)
choose(8,0)
choose(8,2)
choose(8,2)*.5^8
binom.test(7,8,p=.5)
binom.test(8,8,p=.5)
binom.test(1,8,p=.5)
binom.test(2,8,p=.5)
mtcars
cyl46 <- mtcars[which(cyl %in% c(4,6)),]
cyl46 <- mtcars[which(mtcars$cyl %in% c(4,6)),]
cyl46
unique(cyl46$cyl)
?t.test()
t.test(mpg~cyl,var.equal=FALSE,paired=FALSE,alternative="two.sided",conf.level).95,data=cyl46)
t.test(mpg~cyl,var.equal=FALSE,paired=FALSE,alternative="two.sided",conf.level=.95,data=cyl46)
?pbinom
n00b
library(n00b)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/n00b/n00b.R', echo=TRUE)
source('C:/Users/Lucien/OneDrive/HARDDRIVE/LDS/NotAnEngineer/n00b/n00b.R', echo=TRUE)
n00b("pbinom")
n00b("qbinom")
n00b("binom")
n00b("pnorm")
pbinom(q=4,size=9,prob=.5)
pbinom(q=4,size=9,prob=.5,lower.tail = FALSE)
pbinom(q=4,size=15,prob=.5,lower.tail = FALSE)
pbinom(q=4,size=9,prob=.5,lower.tail = FALSE)
pbinom(q=3,size=9,prob=.5,lower.tail = FALSE)
swirl()
library(swirl)
swirl()
myplot(2)
input(20)
myplot(20)
swirl()
myplot2(2)
qt(q=.975,df=2)
qt(p=.975,df=2)
myplot2(20)
sleep
g1
range(g1)
range(g2)
g1-g2
difference<-g1-g2
difference<-g2-g1
mean(difference)
s<-sd(difference)
mean(difference)+c(-1,1)*qt(.975,9)
mean(difference)+c(-1,1)*qt(.975,9)*s/sqrt(10)
mn+c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- 7*15.34^2+20*18.23^2
ns <- 27
sp <- sqrt(sp/ns)
difference + c(-1,1)*qt(.95,)*sp
difference + c(-1,1)*qt(.95,21)*sp
132.86-127.44 + c(-1,1)*qt(.95,ns)*sp*sqrt(1/8+1/21)
132.86-127.44 + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-(var(g1)+var(g2))/2
sp<-sqrt((var(g1)+var(g2))/2)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(.975,18)*sp*sqrt(2/10)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(x=g2,y=g1,var.equal = TRUE, paired=FALSE,conf.level = .95)$conf
t.test(x=g2,y=g1,paired=TRUE,conf.level = .95)$conf
num<-(15.34^2/8+18.23^2/21)^2
15.35^4/8^2/(8-1)+18.23^4/21^2/(21-1)
den <- 15.35^4/8^2/(8-1)+18.23^4/21^2/(21-1)
den <- 15.35^4/8^2/7+18.23^4/21^2/20
den <- 15.35^4/8^2/7 + 18.23^4/21^2/20
den <- 15.33^4/8^2/7 + 18.23^4/21^2/20
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf<-num/den
d
4
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(100)
2
2/(10/4)
15
qt(.95,df=15)
dim(fs)
t.test (fs$sheight-fs$fheight, paired=TRUE)
t.test (fs$sheight,fs$fheight, paired=TRUE)
11.7885 *
| sd(fs$sheight-fs$fheight)/sqrt(1078).
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
mybin[7]
mybin[8]
mybin[7]+mybin[8]
6
mybin[6]
mybin[8]
8
pt(q=2.5,df=15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(q=2,lower.tail = TRUE)
pnorm(q=2,lower.tail = FALSE)
mybin
pbinom(q=6,size=8,prob=.5,lower.tail = TRUE)
pbinom(q=6,size=8,prob=.5,lower.tail = FALSE)
pbinom(q=7,size=8,prob=.5,lower.tail = TRUE)
ppois(q=.1,lambda=5,lower.tail = FALSE)
ppois(q=9,lambda=5,lower.tail = FALSE)
?t.test()
qt(p=.975)
qt(p=.975,df=8)
tscore <- qt(p=.975,df=8)
tscore * c(-1,1) * 33 + 1100
tscore * c(-1,1) * 33/sqrt(8) + 1100
tscore * c(-1,1) * 33/sqrt(9) + 1100
tscore * c(-1,1) * 33/sqrt(9) + 1100
qt(p=.95,df=8) * c(-1,1) * 33/sqrt(9) + 1100
